/* Using auto-fill and auto-fit */

* {
  margin: 0;
  padding: 0;
}

.item {
  padding: 0.2rem;
  background-color: red;
  color: #fff;
  font-size: 1.2rem;
  font-weight: bold;
  font-family: sans-serif;
}

.grid {
  width: 1000px;
  margin: 0 auto;
  background-color: lightgrey;

  display: grid;
  /* grid-template-rows: repeat(2, 100px);
  grid-template-columns: repeat(4, 1fr); */

  /* grid size is 1000px auto-fill will create 10 (1000/100) tracks and fill in 8
  click on grid view to see tracks */
  /* grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(auto-fill, 100px); */

  /* Auto fit does not show the additional 2 tracks as in the example with auto-fill
  click on grid view to see tracks */
  /* grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(auto-fit, 100px); */

  /* This causes autofit to take up full length of the screen, 
  everything grows to fit into one row */
  /* grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); */

  /* overriding width to 100% now allows grid children to drop when you
  resize screen. */
  /* width: 100%;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); */

  /* Because we declared template-rows to be 2, when auto-fit breaks into third row we need
  grid-auto-rows to kick in and automatically create new rows with height 150px */
  width: 100%;
  grid-template-rows: repeat(2, 150px);
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  grid-auto-rows: 150px;
}

.item--1 {
  background-color: orangered;
}
.item--2 {
  background-color: yellowgreen;
}

.item--3 {
  background-color: blueviolet;
}

.item--4 {
  background-color: palevioletred;
}

.item--5 {
  background-color: royalblue;
}

.item--6 {
  background-color: goldenrod;
}

.item--7 {
  background-color: crimson;
}

.item--8 {
  background-color: darkslategray;
}
